Title: Spring Boot JSON Response Handling API

This project shows how to build a Spring Boot REST API that returns clean, structured, and consistent JSON responses. 
Instead of returning raw entity data, we wrap the output with a standard format that includes HTTP status, data, and a custom message.

---

Whatâ€™s Implemented

I have created one response package and inside created one java class file called reponseHandler, in that all the custom reponse handler logic are written
and then in controller java backend rest api file there @getMapping ("VendorId") simply called that responseBuilder method that was created in reponseHandler java file
that should be called here and return that message, httpstatus, object.

-Custom Response Wrapper class (ResponseHandler)
Every API returns consistent format:

  ```json
  {
    "Data": {
      "vendorId": "c4",
      "vendorName": "Dandu Bhanuprakash",
      "vendorAddress": "Chandramouli Nagar",
      "vendorPhoneNumber": "four"
    },
    "HttpStatus": "OK"
    "message": "Requested vendor details are given here"
  }
